/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2017-08-08 11:44:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.system;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bindRes_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>资源管理</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/easyui/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"../../js/easyui/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"../../js/easyui/themes/icon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/default.css\">\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"../../js/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"../../js/easyui/locale/easyui-lang-zh_CN.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/form.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 列表显示 -->\r\n");
      out.write("\t<table id=\"list\"></table>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 按钮列表 -->\r\n");
      out.write("\t<div id=\"toolbar\">\r\n");
      out.write("\t\t<a id=\"save\" href=\"#\" class=\"easyui-linkbutton\"\tdata-options=\"iconCls:'icon-save'\">开始绑定资源</a> \r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\tvar action = \"resources\";\r\n");
      out.write("\t\t\tvar columns = [ [ {\r\n");
      out.write("\t\t\t\tfield : \"id\",\r\n");
      out.write("\t\t\t\ttitle : \"编号\",\r\n");
      out.write("\t\t\t\twidth : 120,\r\n");
      out.write("\t\t\t\talign : \"center\"\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tfield : \"name\",\r\n");
      out.write("\t\t\t\ttitle : \"资源名称\",\r\n");
      out.write("\t\t\t\twidth : 150,\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tfield : \"grantKey\",\r\n");
      out.write("\t\t\t\ttitle : \"授权关键词\",\r\n");
      out.write("\t\t\t\twidth : 120,\r\n");
      out.write("\t\t\t\talign : \"center\"\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tfield : \"resourceType\",\r\n");
      out.write("\t\t\t\ttitle : \"资源类型\",\r\n");
      out.write("\t\t\t\twidth : 120,\r\n");
      out.write("\t\t\t\talign : \"center\"\r\n");
      out.write("\t\t\t}] ];\r\n");
      out.write("\t\t\t//treegrid树形表格展示资源数据\r\n");
      out.write("\t\t\t$(\"#list\").treegrid({\r\n");
      out.write("\t\t\t\tidField:'id',\r\n");
      out.write("\t\t\t\ttreeField:'name',\r\n");
      out.write("\t\t\t\t//抓取后台数据\r\n");
      out.write("\t\t\t\turl:\"../../resources/findByPageByRole.action?roleId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.roleId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\",\r\n");
      out.write("\t\t\t\tcolumns : columns,\r\n");
      out.write("\t\t\t\tpagination : true,\r\n");
      out.write("\t\t\t\tpageList : [50, 200, 100 ],\r\n");
      out.write("\t\t\t\tpageSize : 100,\r\n");
      out.write("\t\t\t\ttoolbar : \"#toolbar\",\r\n");
      out.write("\t\t\t\t//显示复选框\r\n");
      out.write("\t\t\t\tcheckbox:true,\r\n");
      out.write("\t\t\t\t//取消级联选中\r\n");
      out.write("\t\t\t\tcascadeCheck:false\r\n");
      out.write("\t\t\t});\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t//开始绑定资源\r\n");
      out.write("\t\t$(\"#save\").click(function(){\r\n");
      out.write("\t\t\t//获取角色的id\r\n");
      out.write("\t\t\tvar roleId=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.roleId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//获取所有的行\r\n");
      out.write("\t\t\tvar rows=$(\"#list\").treegrid(\"getChildren\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//定义一个变量判断是否有选中\r\n");
      out.write("\t\t\tvar flag=false;\r\n");
      out.write("\t\t\t//定义一个字符串存储所有选择的资源id\r\n");
      out.write("\t\t\tvar  resId=\"\"\r\n");
      out.write("\t\t\tvar  resIdArray=new Array();\r\n");
      out.write("\t\t\t//遍历所有的行\r\n");
      out.write("\t\t\t$(rows).each(function(i){\r\n");
      out.write("\t\t\t\tif(rows[i].checked){\r\n");
      out.write("\t\t\t\t\tresIdArray.push(rows[i].id);\r\n");
      out.write("\t\t\t\t\t//如果有选中的节点就变成true\r\n");
      out.write("\t\t\t\t\tflag=true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t//判断是否有选中的\r\n");
      out.write("\t\t\tif(!flag){\r\n");
      out.write("\t\t\t\t//如果没有选中项 则提示\r\n");
      out.write("\t\t\t\t$.messager.alert(\"提示\",\"您必须选中至少一个资源来绑定\",\"warning\");\r\n");
      out.write("\t\t\t\treturn ;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//id字符串的格式 1,2,3\r\n");
      out.write("\t\t\tresId=resIdArray.join(\",\");\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t//异步请求访问后台让角色绑定资源\r\n");
      out.write("\t\t\t$.post(\"../../role/bindRes.action\",{roleId:roleId,resId:resId},function(data){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(data.success){\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//提示\r\n");
      out.write("\t\t\t\t\t\t$.messager.alert(\"提示\",\"绑定成功\",\"info\");\t\r\n");
      out.write("\t\t\t\t\t\t//关闭窗口,要关闭绑定资源的window页面。先要获取到当前页面的父页面\r\n");
      out.write("\t\t\t\t\t\t//获取父页面 window.parent\r\n");
      out.write("\t\t\t\t\t//\twindow.parent.$(\"#bindResWin\").window(\"close\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t$.messager.alert(\"提示\",\"绑定失败,原因是+\",\"warning\");\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t},\"json\")\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
