/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2017-08-08 11:56:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.system;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class resource_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>资源管理</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/easyui/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"../../js/easyui/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"../../js/easyui/themes/icon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/default.css\">\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"../../js/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"../../js/easyui/locale/easyui-lang-zh_CN.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/form.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 列表显示 -->\r\n");
      out.write("\t<table id=\"list\"></table>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 按钮列表 -->\r\n");
      out.write("\t<div id=\"toolbar\">\r\n");
      out.write("\t\t<a id=\"add\" href=\"#\" class=\"easyui-linkbutton\"\tdata-options=\"iconCls:'icon-save'\">添加</a> \r\n");
      out.write("\t\t<a id=\"editbtn\" href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-edit'\">修改</a> \r\n");
      out.write("\t\t<a id=\"delbtn\" href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-remove'\">删除</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 编辑表单 -->\r\n");
      out.write("\t<div id=\"editWin\" class=\"easyui-window\"\r\n");
      out.write("\t\tdata-options=\"title:'资源编辑',closed:true\"\r\n");
      out.write("\t\tstyle=\"width: 600px; top: 50px; left: 200px\">\r\n");
      out.write("\t\t<!-- 按钮区域 -->\r\n");
      out.write("\t\t<div class=\"datagrid-toolbar\">\r\n");
      out.write("\t\t\t<a id=\"save\" class=\"easyui-linkbutton\" href=\"#\" icon=\"icon-save\">保存</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 编辑区域 -->\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<form id=\"editForm\" method=\"post\">\r\n");
      out.write("\t\t\t\t<!-- 提供隐藏域ID -->\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"id\" />\r\n");
      out.write("\t\t\t\t<table width=\"80%\" align=\"center\" class=\"table-edit\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>资源名称</td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"name\" class=\"easyui-validatebox\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-options=\"required:true\" /></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>资源关键词</td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"grantKey\" class=\"easyui-validatebox\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-options=\"required:true\" /></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>资源类型</td>\r\n");
      out.write("\t\t\t\t\t\t<td><select name=\"resourceType\" class=\"easyui-combobox\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-options=\"editable:false,width:150\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"0\">菜单</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"1\">按钮</option>\r\n");
      out.write("\t\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>菜单页面路径</td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"pageUrl\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"easyui-validatebox\" data-options=\"required:true\" /></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>菜单图标</td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"icon\" /></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>排序</td>\r\n");
      out.write("\t\t\t\t\t\t<td><input name=\"seq\" value=\"0\" class=\"easyui-numberspinner\"\r\n");
      out.write("\t\t\t\t\t\t\trequired=\"required\" data-options=\"editable:false\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>是否展示</td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"radio\" name=\"open\" value=\"true\" />展开 <input\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"radio\" name=\"open\" value=\"false\" />不展开</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>上级资源</td>\r\n");
      out.write("\t\t\t\t\t\t<td><select id=\"parentResId\" name=\"pid\" class=\"easyui-combobox\" \r\n");
      out.write("\t\t\t\t\t\tdata-options=\"url:'../../resources/list.action',valueField:'id',textField:'name'\" style=\"width:120px\"></select></td>\r\n");
      out.write("\t\t\t\t\t</tr>\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\tvar action = \"resources\";\r\n");
      out.write("\t\t\tvar columns = [ [ {\r\n");
      out.write("\t\t\t\tfield : \"id\",\r\n");
      out.write("\t\t\t\ttitle : \"编号\",\r\n");
      out.write("\t\t\t\twidth : 120,\r\n");
      out.write("\t\t\t\talign : \"center\"\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tfield : \"name\",\r\n");
      out.write("\t\t\t\ttitle : \"资源名称\",\r\n");
      out.write("\t\t\t\twidth : 150,\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tfield : \"grantKey\",\r\n");
      out.write("\t\t\t\ttitle : \"授权关键词\",\r\n");
      out.write("\t\t\t\twidth : 120,\r\n");
      out.write("\t\t\t\talign : \"center\"\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tfield : \"pageUrl\",\r\n");
      out.write("\t\t\t\ttitle : \"访问路径\",\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\talign : \"center\"\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tfield : \"resourceType\",\r\n");
      out.write("\t\t\t\ttitle : \"资源类型\",\r\n");
      out.write("\t\t\t\twidth : 120,\r\n");
      out.write("\t\t\t\talign : \"center\"\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tfield : \"icon\",\r\n");
      out.write("\t\t\t\ttitle : \"资源图标\",\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\talign : \"center\"\r\n");
      out.write("\t\t\t} ] ];\r\n");
      out.write("\t\t\t//treegrid树形表格展示资源数据\r\n");
      out.write("\t\t\t$(\"#list\").treegrid({\r\n");
      out.write("\t\t\t\tidField:'id',\r\n");
      out.write("\t\t\t\ttreeField:'name',\r\n");
      out.write("\t\t\t\turl:\"../../resources/findByPage.action\",\r\n");
      out.write("\t\t\t\tcolumns : columns,\r\n");
      out.write("\t\t\t\tpagination : true,\r\n");
      out.write("\t\t\t\tpageList : [50, 200, 100 ],\r\n");
      out.write("\t\t\t\tpageSize : 100,\r\n");
      out.write("\t\t\t\ttoolbar : \"#toolbar\"\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//添加资源\r\n");
      out.write("\t\t$(\"#add\").click(function(){\r\n");
      out.write("\t\t\t//打开之前清理表单数据\r\n");
      out.write("\t\t\t$(\"#editForm\").form(\"clear\")\r\n");
      out.write("\t\t\t//打开window窗口\r\n");
      out.write("\t\t\t$(\"#editWin\").window(\"open\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//表单的提交(保存)\r\n");
      out.write("\t\t$(\"#save\").click(function(){\r\n");
      out.write("\t\t\t//提交表单\r\n");
      out.write("\t\t\t$(\"#editForm\").form(\"submit\",{\r\n");
      out.write("\t\t\t\turl:'../../resources/save.action',\r\n");
      out.write("\t\t\t\tonSubmit:function(){\r\n");
      out.write("\t\t\t\t\t//判断 所有表单验证通过才可以提交\r\n");
      out.write("\t\t\t\t\treturn $(\"#editForm\").form('validate');\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\t// 先将data手动转换成json格式\r\n");
      out.write("\t\t\t\t\tdata = eval(\"(\" + data + \")\");\r\n");
      out.write("\t\t\t\t\tif(data.success){\r\n");
      out.write("\t\t\t\t\t\t$.messager.alert(\"提示\",\"保存成功\",\"info\");\r\n");
      out.write("\t\t\t\t\t\t//如果成功 则清空表格数据\r\n");
      out.write("\t\t\t\t\t\t$(\"#editForm\").form(\"clear\");\r\n");
      out.write("\t\t\t\t\t\t//保存成功后 关闭刷口并刷新treegrid数据\r\n");
      out.write("\t\t\t\t\t\t$(\"#editWin\").window(\"close\");\r\n");
      out.write("\t\t\t\t\t\t//刷新\r\n");
      out.write("\t\t\t\t\t\t$(\"#list\").treegrid(\"reload\");\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t$.messager.alert(\"提示\",\"保存失败,原因是:\"+e.msg,\"warning\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//删除\r\n");
      out.write("\t\t$(\"#delbtn\").click(function() {\r\n");
      out.write("\t\t\t\tvar rows = $(\"#list\").datagrid(\"getSelections\");\r\n");
      out.write("\t\t\t\tif (rows.length == 0) {\r\n");
      out.write("\t\t\t\t\t$.messager.alert(\"提示\", \"修改时必须要选择一行数据来操作\", \"warning\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$.messager.confirm(\"确认框\", \"您确定要删除这些数据吗\", function(r) {\r\n");
      out.write("\t\t\t\t\t// 确认就进去进行删除操作\r\n");
      out.write("\t\t\t\t\tif (r) {\r\n");
      out.write("\t\t\t\t\t\t// 获取所有行的id\r\n");
      out.write("\t\t\t\t\t\tvar ids = \"\";\r\n");
      out.write("\t\t\t\t\t\t//定义一个数组存储数据\r\n");
      out.write("\t\t\t\t\t\tvar idArray=new Array();\r\n");
      out.write("\t\t\t\t\t\t// 拼接所有的id\r\n");
      out.write("\t\t\t\t\t\tfor (var i = 0; i < rows.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\tidArray.push(rows[i].id)\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t//调用js的方法直接给每个元素加逗号\r\n");
      out.write("\t\t\t\t\t\t\tids=idArray.join(\",\")\r\n");
      out.write("\t\t\t\t\t\t// 使用ajax动态访问后台数据进行删除\r\n");
      out.write("\t\t\t\t\t\t$.post(\"../../resources/delete.action\", {\r\n");
      out.write("\t\t\t\t\t\t\t\"ids\" : ids\r\n");
      out.write("\t\t\t\t\t\t}, function(data) {\r\n");
      out.write("\t\t\t\t\t\t\tif (data.success) {\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t// 提示成功\r\n");
      out.write("\t\t\t\t\t\t\t\t$.messager.alert(\"提示\", \"删除成功\", \"info\");\r\n");
      out.write("\t\t\t\t\t\t\t\t// 删除成功则提示删除成功并刷新页面数据\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#list\").treegrid(\"reload\");\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t// 删除失败则提示失败原因\r\n");
      out.write("\t\t\t\t\t\t\t\t$.messager.alert(\"提示\", \"删除失败,原因是\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t+ data.message, \"error\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}, \"json\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//修改-数据回响\t\r\n");
      out.write("\t$(\"#editbtn\").click(function() {\t\t\t\r\n");
      out.write("\t\t\t\tvar rows = $(\"#list\").treegrid(\"getSelections\");\r\n");
      out.write("\t\t\t\tif (rows.length != 1) {\r\n");
      out.write("\t\t\t\t\t$.messager.alert(\"提示\", \"修改时必须只能选择一行数据来操作\", \"warning\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t// 获取被选中行的id\r\n");
      out.write("\t\t\t\tvar id = rows[0].id;\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t// 从后台数据数据自动填充回响到表单当中--采用form表单的load方法\r\n");
      out.write("\t\t\t\t$(\"#editForm\").form(\"load\",\r\n");
      out.write("\t\t\t\t\t\t\"../../resources/get.action?uuid=\" + id);\t\r\n");
      out.write("\t\t\t\t//手动填空父资源的combobox的数据\r\n");
      out.write("\t\t\t\t$(\"#parentResId\").combobox(\"setValue\",rows[0]._parentId);\r\n");
      out.write("\t\t\t\t// 打开window窗口\r\n");
      out.write("\t\t\t\t$(\"#editWin\").window(\"open\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
