/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2017-08-09 11:05:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.system;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bindRole_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>角色管理</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/easyui/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"../../js/easyui/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"../../js/easyui/themes/icon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/default.css\">\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"../../js/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"../../js/easyui/locale/easyui-lang-zh_CN.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/form.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 列表显示 -->\r\n");
      out.write("\t<table id=\"list\"></table>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 按钮列表 -->\r\n");
      out.write("\t<div id=\"toolbar\">\r\n");
      out.write("\t\t<a id=\"add\" href=\"#\" class=\"easyui-linkbutton\"\r\n");
      out.write("\t\t\tdata-options=\"iconCls:'icon-save'\">开始绑定角色</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t//表格的列数据\r\n");
      out.write("\t\tvar columns = [ [ {\r\n");
      out.write("\t\t\tfield : \"id\",\r\n");
      out.write("\t\t\tcheckbox : true\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tfield : \"name\",\r\n");
      out.write("\t\t\ttitle : \"角色名\",\r\n");
      out.write("\t\t\twidth : 120,\r\n");
      out.write("\t\t\talign : \"center\"\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tfield : \"keyword\",\r\n");
      out.write("\t\t\ttitle : \"角色关键字\",\r\n");
      out.write("\t\t\twidth : 120,\r\n");
      out.write("\t\t\talign : \"center\"\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tfield : \"description\",\r\n");
      out.write("\t\t\ttitle : \"备注\",\r\n");
      out.write("\t\t\twidth : 200,\r\n");
      out.write("\t\t\talign : \"center\"\r\n");
      out.write("\t\t} ] ];\r\n");
      out.write("\r\n");
      out.write("\t\t//当前模块的action\r\n");
      out.write("\t\tvar action = \"role\";\r\n");
      out.write("\r\n");
      out.write("\t\t//展示角色列表\r\n");
      out.write("\t\t$(\"#list\").datagrid({\r\n");
      out.write("\t\turl : \"../../\" + action + \"/findByPageByUser.action?userId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\",\r\n");
      out.write("\t\tcolumns : columns,\r\n");
      out.write("\t\tpagination : true,\r\n");
      out.write("\t\tpageList : [5, 10, 15 ],\r\n");
      out.write("\t\tpageSize : 10,\r\n");
      out.write("\t\ttoolbar : \"#toolbar\",\r\n");
      out.write("\t\t//datagrid有一个数据加载完成后的触发事件  \r\n");
      out.write("\t\tonLoadSuccess:function(data){\r\n");
      out.write("\t\t\t//遍历数据\r\n");
      out.write("\t\t\t$(data.rows).each(function(i){\r\n");
      out.write("\t\t\t\t//判断checked属性是否为true  如果为true 则选中\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data.rows[i].checked){\r\n");
      out.write("\t\t\t\t\t//选中当前行\r\n");
      out.write("\t\t\t\t\t$(\"#list\").datagrid(\"selectRow\",i);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t//绑定角色\r\n");
      out.write("\t\t$(\"#add\").click(function() {\r\n");
      out.write("\t\t\t//获取当前用户的id\r\n");
      out.write("\t\t\tvar userId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t//获取选中的要绑定角色的行\r\n");
      out.write("\t\t\tvar rows = $(\"#list\").datagrid(\"getSelections\");\r\n");
      out.write("\t\t\tif (rows.length < 1) {\r\n");
      out.write("\t\t\t\t$.messager.alert(\"提示\", \"您至少要选中一个角色来绑定\", \"warning\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t//组合角色id\r\n");
      out.write("\t\t\tvar roleIds = \"\";\r\n");
      out.write("\t\t\tvar roleIdArr = new Array();\r\n");
      out.write("\t\t\t//遍历选中的行\r\n");
      out.write("\t\t\t$(rows).each(function(i) {\r\n");
      out.write("\t\t\t\troleIdArr.push(rows[i].id);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t//用逗号来组合\r\n");
      out.write("\t\t\troleIds = roleIdArr.join(\",\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t//异步请求绑定角色\r\n");
      out.write("\t\t\t$.post(\"../../user/bindRole.action\", {\r\n");
      out.write("\t\t\t\tuserId : userId,\r\n");
      out.write("\t\t\t\troleIds : roleIds\r\n");
      out.write("\t\t\t}, function(data) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (data.success) {\r\n");
      out.write("\t\t\t\t\t$.messager.alert(\"提示\", \"绑定角色成功\", \"info\");\r\n");
      out.write("\t\t\t\t\t//关闭窗口,要关闭绑定资源的window页面。先要获取到当前页面的父页面\r\n");
      out.write("\t\t\t\t\t//获取父页面 window.parent\r\n");
      out.write("\t\t\t\t//\twindow.parent.$(\"#bindRoleWin\").window(\"close\");\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t$.messager.alert(\"提示\", \"绑定失败,原因是:\" + data.msg);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, \"json\")\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
